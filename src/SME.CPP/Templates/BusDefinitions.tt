﻿<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
#ifndef SME_BUSDEFINITIONS_HPP
#define SME_BUSDEFINITIONS_HPP

#include "SystemTypes.hpp"
#include "<#= Naming.SharedDefinitionsFileName(Network) #>"

// Insert additional includes here
// #### USER-DATA-INCLUDE-START
// #### USER-DATA-INCLUDE-END

<#
var known = new HashSet<Type>();
foreach(var bus in Network.Busses) {
    if (known.Contains(bus.SourceType))
        continue;
    known.Add(bus.SourceType);
#>

class <#= bus.Name #> {
private:
<#     foreach(var signal in bus.Signals) {
           var cpptype = RS.TypeScope.GetType(signal);
           if (cpptype.IsArray) { #>
    <#= Type(signal) #> write_<#= signal.Name #>;
    <#= Type(signal) #> read_<#= signal.Name #>;
    bool* valid_<#= signal.Name #>;
    bool* written_<#= signal.Name #>;
    bool* staged_<#= signal.Name #>;
    size_t size_<#= signal.Name #>;
<#         } else { #>
    <#= Type(signal) #> write_<#= signal.Name #>;
    <#= Type(signal) #> read_<#= signal.Name #>;
    bool valid_<#= signal.Name #>;
    bool written_<#= signal.Name #>;
    bool staged_<#= signal.Name #>;
<#         } #>
<#     } #>

public:

    <#= bus.Name #> ();

<#     foreach(var signal in bus.Signals) {
           var cpptype = RS.TypeScope.GetType(signal);
           if (cpptype.IsArray) {
              var eltype = cpptype.ElementName; #>
    <#= eltype #> <#= signal.Name #>(size_t index) const;
    <#= eltype #> <#= signal.Name #>(size_t index, <#= eltype #> value);
<#         } else { #>
    <#= Type(signal) #> <#= signal.Name #>() const;
    <#= Type(signal) #> <#= signal.Name #>(<#= Type(signal) #> value);
<#         } #>
<#     } #>
    void forward_signals();
    void propagate_signals();
};

<# } #>

// Insert additional code and classes here
// #### USER-DATA-EXTRA-START
// #### USER-DATA-EXTRA-END

#endif /* SME_BUSDEFINITIONS_HPP */

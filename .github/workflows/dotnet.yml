name: .NET Core 5.0

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  tests:
    name: Samples and unit tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.*
    - name: Setup libraries (Linux)
      if: runner.os == 'Linux'
      run: |
        docker pull ghdl/ghdl:ubuntu20-mcode
        sudo apt install libc6-dev libgdiplus
    - name: Setup shell (Windows)
      if: runner.os == 'Windows'
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true
    - name: Setup GHDL (Windows)
      if: runner.os == 'Windows'
      uses: ghdl/setup-ghdl-ci@nightly
      with:
        backend: llvm
    - name: Setup libraries (MacOS)
      if: runner.os == 'macOS'
      run: |
        mkdir -p ~/.docker/machine/cache
        curl -Lo ~/.docker/machine/cache/boot2docker.iso https://github.com/boot2docker/boot2docker/releases/download/v19.03.12/boot2docker.iso
        brew install docker docker-machine
        docker-machine create --driver virtualbox default
        docker-machine env default
        eval $(docker-machine env default)
        docker pull ghdl/ghdl:ubuntu20-mcode
        brew install mono-libgdiplus
    - name: Restore
      run: dotnet restore src/SME.sln
    - name: Build
      run: dotnet build --no-restore src/UnitTest
    - name: Test (Linux)
      if: runner.os == 'Linux'
      env:
        SME_TEST_SKIP_VCD: 1
      run: dotnet test --no-build --logger:"console;verbosity=detailed" src/UnitTest
    - name: Test (Windows)
      if: runner.os == 'Windows'
      env:
        SME_TEST_SKIP_VCD: 1
        SME_TEST_USE_NATIVE_GHDL: 1
      run: |
        "$env:GHDL" --version
        "$($env:MSYS2_PATH)MINGW64\bin\ghdl.exe" --version
        dotnet test --no-build --logger:"console;verbosity=detailed" src/UnitTest
    - name: Test (MacOS)
      if: runner.os == 'macOS'
      env:
        SME_TEST_SKIP_VCD: 1
      run: |
        eval $(docker-machine env default)
        dotnet test --no-build --logger:"console;verbosity=detailed" src/UnitTest